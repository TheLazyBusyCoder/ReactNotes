// piece of data = piece of state

// vanilla js = normaly how js is written in an html file 
// react = everything is handeled by js 

// components = building blocks of user interface 
  - buttons input fields , etc 
  - search bars 

// declarative = JSX = telling react what a component should look like , based on current data/state

// In react we never touch the DOM

// JSX = a syntax that combines HTML , CSS , JS as well as referencing other components 

// STATE = (data) ex: array of int's 

// React Reacts to state changes by re-rendering the UI.

// react is just a library

### TO USE REACT WITH OUR NORMAL HTML using script ###

(simple time example)
// pure react without a build tool 

  <!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <title>PURE-HTML</title>
    </head>
    <body>
      <div id="root"></div>
      <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
      <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
      <script>
        function App() {
          const [time, setTime] = React.useState(new Date().toLocaleTimeString());
          setInterval(() => {
            setTime(new Date().toLocaleTimeString());
          }, 1000);
          // 1p = html ele, 2p = ?, 3p = child element
          return React.createElement("header", null, time);
        }
        const root = ReactDOM.createRoot(document.getElementById("root"));
        root.render(React.createElement(App));
      </script>
    </body>
  </html>

// react with vite 

npx create-react-app projectName

